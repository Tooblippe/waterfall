{"name":"waterfall.py","tagline":"A waterfall chart implementation in python and Excel DataNitro","body":"# waterfall.py\r\n\r\nSimple function that implements a waterfall chart in python. I have not  been able to find any decent implementation of a waterfall chart online and implementing it in Excel is neither trivial nor pretty. \r\n\r\n#usage\r\nThis implementation is still very basic as I needed it fairly quickly\r\n\r\nIr reads an Excel file into a pandas dataframe. YOu can obviously hard code your data.The file format currently is very simple. Some of the axis names and chart heading is still hard coded. \r\n\r\nItem  | Value\r\n-----  |  ------\r\nTomatos  | 50\r\nPotatos | 30\r\nGas | 90\r\nCorrection | -10\r\nUnplanned | 9\r\nStuff | 20\r\nOther Stuff | 20\r\nFoo | 10\r\n\r\nEdit the following lines to point to an Excel file with the data. The waterfall() function is called with the parsed Excel file pandas dataframe.\r\n\r\n```\r\ndf = pandas.ExcelFile('test.xls').parse(\"Sheet1\")\r\nWaterfall( df )\r\n```\r\n\r\n![waterfall](https://raw.github.com/Tooblippe/waterfall/master/temp.png)\r\n\r\n# custom matplotlib\r\nThe function makes small modifications to the Matplotlib config file and also sets the default size to someting that should be easy to copy and paste to powerpoint.\r\n\r\n\r\n# implementing in DataNitro\r\nI am busy porting this to a [DataNitro](https://datanitro.com/) function. This will mean that you would be able to create a chart in excel using the python extension and calling  something similar to the following in excel as you would call any normal Excel function:\r\n```\r\n= waterfall(\"A1:Ax,B1:Bx\")\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}